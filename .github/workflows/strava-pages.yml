# .github/workflows/strava-pages.yml
name: Fetch Strava + Deploy Pages

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'   # every 30 minutes (adjust as needed)

# Top-level permissions used by the Pages deploy and secret update
permissions:
  contents: read
  pages: write
  id-token: write
  actions: write     # <-- allow updating secrets via Actions API

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci

      # 1) Fetch Strava JSON into public/data/strava-latest.json
      - name: Fetch Strava
        env:
          STRAVA_CLIENT_ID: ${{ secrets.STRAVA_CLIENT_ID }}
          STRAVA_CLIENT_SECRET: ${{ secrets.STRAVA_CLIENT_SECRET }}
          STRAVA_REFRESH_TOKEN: ${{ secrets.STRAVA_REFRESH_TOKEN }}
          STRAVA_ATHLETE_ID: ${{ secrets.STRAVA_ATHLETE_ID }}
        run: node scripts/fetch-strava.mjs

      # 2) If Strava rotated the refresh token, update the repo secret
      - name: Update rotated STRAVA_REFRESH_TOKEN secret (if present)
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f .data/rotated_refresh_token.txt ]; then
            node scripts/update-gh-secret.mjs STRAVA_REFRESH_TOKEN
          else
            echo "No rotated token; skipping."
          fi

      # 3) Build Astro
      - name: Build
        run: npm run build

      # 4) Upload and deploy to GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

---
const { pathname } = Astro.url;
const active = (p: string) => (pathname === p ? "active" : "");
---
<nav class="topbar" aria-label="Primary">
  <div class="inner">
    <a href="/" class="logo-link" aria-label="Home">
      <img id="logoImg" class="logo" src="/icons/logo dark.png" alt="Logo" />
    </a>

    <ul class="menu" role="menubar">
      <li role="none"><a role="menuitem" class={`link ${active('/')}`} href="/">Home</a></li>
      <li role="none"><a role="menuitem" class={`link ${active('/about')}`} href="/about">About</a></li>
      <li role="none"><a role="menuitem" class={`link ${active('/research')}`} href="/research">Research</a></li>
    </ul>

    <button class="toggle" id="themeToggle" aria-label="Toggle light/dark mode" title="Toggle theme">
      <span id="themeIcon" aria-hidden="true"></span>
    </button>
  </div>
</nav>

<script>
  (function(){
    const root = document.documentElement;
    const btn  = document.getElementById('themeToggle');
    const icon = document.getElementById('themeIcon');
    const logo = document.getElementById('logoImg');

    const logos = {
      light: "/icons/logo light.png",
      dark:  "/icons/logo dark.png"
    };

    function setIcon(theme){
      icon.innerHTML = theme === 'dark'
        ? '<svg viewBox="0 0 24 24" width="18" height="18" fill="currentColor"><path d="M21.75 14.5A9.75 9.75 0 1111.5 2.25a8 8 0 0010.25 12.25z"/></svg>'
        : '<svg viewBox="0 0 24 24" width="18" height="18" fill="currentColor"><path d="M6.76 4.84l-1.8-1.79L3.17 4.84l1.79 1.79 1.8-1.79zM1 13h3v-2H1v2zm10 10h2v-3h-2v3zm9.83-18.16l-1.79-1.79-1.8 1.79 1.8 1.79 1.79-1.79zM20 13h3v-2h-3v2zM6.76 19.16l-1.8 1.79 1.41 1.41 1.79-1.79-1.4-1.41zM17.24 19.16l1.79 1.79 1.41-1.41-1.79-1.79-1.41 1.41zM12 6a6 6 0 100 12 6 6 0 000-12z"/></svg>';
    }

    function apply(theme){
      root.setAttribute('data-theme', theme);
      localStorage.setItem('theme', theme);
      setIcon(theme);
      if (logo) logo.src = logos[theme];
    }

    // Init from html[data-theme] (set in Layout.astro)
    apply(root.getAttribute('data-theme') === 'dark' ? 'dark' : 'light');

    btn.addEventListener('click', () => {
      const next = root.getAttribute('data-theme') === 'light' ? 'dark' : 'light';
      apply(next);
    });
  })();
</script>

<style>
  .topbar{
    position:sticky; top:0; z-index:1000; width:100%;
    background:var(--bar-bg); border-bottom:1px solid var(--border);
    backdrop-filter:saturate(150%) blur(6px);
  }
  .inner{
    max-width:1200px; margin:0 auto; padding:.6rem 1rem;
    display:flex; align-items:center; gap:1rem;
  }

  .logo-link{ display:inline-flex; align-items:center; }
  .logo{ height:32px; width:auto; display:block; }

  .menu{ list-style:none; margin:0; padding:0; display:flex; align-items:center; gap:.4rem; }
  .link{
    font-weight:700; color:var(--muted);
    padding:.5rem 1rem; border-radius:999px; border:1px solid transparent; text-decoration:none;
  }
  .link:hover{ background:var(--hover); color:var(--text); }
  .link.active{
    background: color-mix(in oklab, var(--bg) 70%, #000 30%);
    border:1px solid var(--border); color:var(--text);
  }

  .toggle{
    margin-left:auto;
    display:inline-flex; align-items:center; justify-content:center;
    border:1px solid var(--border); background:var(--card);
    border-radius:999px; padding:.45rem .6rem; cursor:pointer; color:var(--text);
  }
  .toggle:hover{ background:var(--hover); }
</style>

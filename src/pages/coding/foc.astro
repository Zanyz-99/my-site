---
import Layout from "../../layouts/Layout.astro";

const pageTitle = "FOC — Play Online";
const gamePath = "/games/FOC/index.html";
---

<Layout title={pageTitle} description="Play FOC (portrait 9:16) — Unity WebGL.">
  <style>
    .foc-wrap {
      display: grid;
      grid-template-columns: 1fr;
      gap: 1.25rem;
      margin-inline: auto;
    }
    @media (min-width: 980px) {
      .foc-wrap {
        grid-template-columns: 1.1fr .9fr;
        align-items: start;
      }
    }

    .game-title {
      margin: 0;
      font-size: var(--h1-size);
      font-weight: 1000;
      letter-spacing: -0.01em;
      line-height: calc(var(--line) - .15);
      color: var(--text);
    }

    .about-col p,
    .about-col ul {
      margin: 0 0 1rem 0;
      color: var(--text);
      font-size: var(--body-size);
      line-height: 1.5;
    }

    .about-col ul {
      padding-left: 1.25rem;
    }

    .stage {
      height: min(90dvh, 980px);
      aspect-ratio: 9/16;
      margin: 0 auto;
      position: relative;
      overflow: hidden;
      max-width: 100%;
      background: #000;
      border-radius: 12px;
      border: 1px solid var(--border);
    }
    .stage iframe {
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
      border: 0;
      display: block;
    }

    .actions {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: .75rem;
      margin-top: .75rem;
    }

    .btnrow {
      display: flex;
      flex-wrap: wrap;
      gap: .75rem;
    }
    /* Buttons */
    .btn {
      display: inline-flex;
      align-items: center;
      gap: .5rem;
      padding: .65rem .9rem;
      border-radius: 10px;
      border: 1px solid var(--border);
      background: var(--card);   /* theme-aware background */
      color: var(--text);        /* theme-aware text */
      cursor: pointer;
    }
    
    .btn:hover {
      background: var(--hover);
    }
    
    .btn.primary {
      background: var(--text);   /* primary = solid text color */
      color: var(--bg);          /* invert text */
      border-color: var(--text);
    }
    
    .muted {
      color: var(--muted);
    }
  </style>

  <section class="content foc-wrap">
    <!-- Left column: About -->
    <div class="about-col">
      <h1 class="game-title">Furthest On Circle</h1>
      <p>An arcade style game that will test your skills. The only challenge is how well you can aim the ball and how quickly you can shoot!</p>

      <h3>How to play</h3>
        <p>
          Beat the expanding circles and get the ball to the other end of the screen to
          hit the target. Think quick and pull and drag the ball to aim and shoot!
        </p>
        <p>◉ Easy - Two expanding circles.</p>
        <p>◉ Medium - Three expanding circles and a moving target.</p>
        <p>◉ Hard - Infinite expanding circles!</p>

      <div class="btnrow">
        <button class="btn primary" id="btn-fullscreen" type="button">Enter Fullscreen</button>
      </div>
    </div>

    <!-- Right column: Game -->
    <aside>
      <div class="stage">
        <iframe
          id="gameframe"
          src={gamePath}
          allow="fullscreen; gamepad; xr-spatial-tracking"
          scrolling="no"
          loading="eager"
          title="FOC game"
        ></iframe>
      </div>
      <div class="actions">
        <span class="muted">Tip: fullscreen removes borders.</span>
        <div class="btnrow">
          <button class="btn" id="btn-reload" type="button">Reload</button>
        </div>
      </div>
    </aside>
  </section>

  <script>
    const frame = document.getElementById("gameframe");
    const fsBtn = document.getElementById("btn-fullscreen");
    const reloadBtn = document.getElementById("btn-reload");

    fsBtn?.addEventListener("click", async () => {
      try {
        if (document.fullscreenElement) {
          await document.exitFullscreen();
          fsBtn.textContent = "Enter Fullscreen";
        } else {
          await frame.requestFullscreen();
          fsBtn.textContent = "Exit Fullscreen";
        }
      } catch (e) { console.error(e); }
    });

    reloadBtn?.addEventListener("click", () => {
      frame.src = frame.src; // hard reload
    });
  </script>
</Layout>

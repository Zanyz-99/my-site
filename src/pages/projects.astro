---
import Layout from "../layouts/Layout.astro";

type Project = {
  id: string;
  title: string;
  subtitle?: string;
  logo?: string;
  about: string;
  howto?: string;
  store?: string | null;
  play?: string | null;
};

const projects: Project[] = [
  {
    id: "foc",
    title: "Furthest On Circle",
    logo: "/icons/FOC.png",
    about:
      "A small tactics sandbox exploring positioning, timing, and resource trade‑offs in a minimalist battlefield.",
    howto:
      "Pick a scenario, deploy units, and try to control space efficiently. Use cover, timing, and arcs to survive longer.",
    store: "https://play.google.com/store/apps/details?id=com.ZanyInc.FOC",
    play: "https://zachscholz.com/coding/foc/",
  },
  {
    id: "tone",
    title: "Tone - A Color Game",
    logo: "/icons/Tone.png",
    about:
      "Guess the CMYK percentages to match the target color in as few guesses as possible. Simple rules, surprisingly deep intuition.",
    howto:
      "Enter your CMYK guess; compare against the target; iterate to minimize guesses. Learn how colors blend as you play.",
    store: "https://play.google.com/store/apps/details?id=com.ZanyInc.ToneRemastered",
    play: "https://zachscholz.com/coding/tone/",
  },
  {
    id: "pantry",
    title: "Pantry Planner",
    logo: "/icons/Pantry.png",
    about:
      "Lightweight pantry + meal planning utility to reduce waste and plan quick, repeatable meals from what you already have.",
    howto:
      "Add items you keep on hand, track low stock, and build quick meal templates that auto‑suggest a grocery list.",
    store: "https://play.google.com/store/apps/details?id=com.zanyinc.pantrymealplanner.pantrymealplanner",
    play: "/coding/pantry-planner",
  },
  {
    id: "sheepshead",
    title: "Sheepshead",
    logo: "/icons/Sheepshead.png",
    about:
      "A remastered Sheepshead with clean visuals and crisp interactions. Play quick hands and practice strategy.",
    howto:
      "Win tricks using trump and follow suit when possible. Choose to pick or pass, then play out the hand to maximize points.",
    store: "https://play.google.com/store/apps/details?id=com.ZanyInc.SheepsheadRemastered",
    play: "https://zachscholz.com/coding/sheepshead/",
  },
];
---
<Layout title="Projects — Zach Scholz" description="Side projects: games, sims, and tools.">
  <section class="projects-wrap content" style="display:grid;gap:12px;justify-items:start;align-items:start;margin-inline:auto">
    <div class="spacer-md" aria-hidden="true"></div>

    <section class="accordion" aria-label="Side projects">
      {projects.map((p) => (
        <div class="acc" id={`acc-proj-${p.id}`}>
          <div class="acc-header">
            <button
              class="acc-btn"
              type="button"
              aria-expanded="false"
              aria-controls={`panel-proj-${p.id}`}
              id={`btn-proj-${p.id}`}
            >
              <span class="acc-toggle" aria-hidden="true"></span>
              <span class="sr-only" style="position:absolute;left:-10000px;">Toggle {p.title}</span>
            </button>
            <h1 class="acc-title" id={`title-proj-${p.id}`}>{p.title}</h1>
          </div>

          <div
            class="acc-panel"
            id={`panel-proj-${p.id}`}
            role="region"
            aria-labelledby={`title-proj-${p.id}`}
          >
            <!-- About row: big logo + about text inline -->
            <div class="about-row" style="display:flex; align-items:center; gap:.8rem; margin:.1rem 0 .25rem 0;">
              {p.logo ? <img class="about-logo" src={p.logo} alt={`${p.title} logo`} style="width:64px;height:64px;border-radius:12px;display:block;" /> : null}
              <p class="about-text" style="margin:0;color:var(--text)">{p.about}</p>
            </div>

            <!-- How to Play -->
            {p.howto && (
              <div class="block" style="display:grid;gap:.35rem">
                <h2 class="subhead" style="margin:.25rem 0 0;color:var(--text);font-size:var(--h3-size)">How to Play</h2>
                <p class="muted">{p.howto}</p>
              </div>
            )}

            <!-- Links -->
            <ul class="stack gray-hover links" aria-label={`${p.title} links`} style="margin-top:.25rem">
              {p.store && (
                <li class="stack-item hoverable">
                  <a href={p.store} target="_blank" rel="noopener">Google Play</a>
                </li>
              )}
              {p.play && (
                <li class="stack-item hoverable">
                  <a href={p.play} target="_blank" rel="noopener">Play Now ↗</a>
                </li>
              )}
            </ul>
          </div>
        </div>
      ))}
    </section>
  </section>

  <!-- Accordion JS -->
  <script type="module">
    const accRoot = document.querySelector('.accordion');
    if (!accRoot) throw new Error('Accordion root not found');
    const accs = Array.from(accRoot.querySelectorAll('.acc'));

    function openPanel(panel, btn){
      panel.style.display = 'block';
      const start = panel.offsetHeight || 0;
      const target = panel.scrollHeight;
      panel.style.height = start + 'px';
      panel.getBoundingClientRect();
      panel.style.height = target + 'px';
      btn.setAttribute('aria-expanded', 'true');
      const onEnd = (ev)=>{ if(ev.propertyName!=='height')return; panel.removeEventListener('transitionend', onEnd); panel.style.height='auto'; };
      panel.addEventListener('transitionend', onEnd);
    }
    function closePanel(panel, btn){
      const current = panel.offsetHeight;
      panel.style.height = current + 'px';
      panel.getBoundingClientRect();
      panel.style.height = '0px';
      const onEnd = (ev)=>{ if(ev.propertyName!=='height')return; panel.removeEventListener('transitionend', onEnd); panel.style.display='none'; btn.setAttribute('aria-expanded','false'); };
      panel.addEventListener('transitionend', onEnd);
    }
    function toggle(acc){
      const btn = acc.querySelector('.acc-btn');
      const panel = acc.querySelector('.acc-panel');
      const expanded = btn.getAttribute('aria-expanded') === 'true';
      if (expanded) closePanel(panel, btn); else openPanel(panel, btn);
    }

    accs.forEach(acc=>{
      const btn = acc.querySelector('.acc-btn');
      const title = acc.querySelector('.acc-title');
      const panel = acc.querySelector('.acc-panel');
      btn.setAttribute('aria-expanded','false');
      panel.style.display='none';
      panel.style.height='0px';
      btn.addEventListener('click', ()=>toggle(acc));
      btn.addEventListener('keydown', (e)=>{ if(e.key===' '||e.key==='Enter'){ e.preventDefault(); toggle(acc); } });
      title.addEventListener('click', ()=>toggle(acc));
    });
  </script>
</Layout>
